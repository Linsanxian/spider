# -*- coding: utf-8 -*-
"""
Created on 2023-05-27 12:49:29
---------
@summary:
---------
@author: admin1
"""

import feapder
from feapder import Item

token = ''
host = 'http://52.83.181.7:8091'


class TbH688Item(Item):
    """
    This class was generated by feapder
    command: feapder create -i tb_h688 1
    """

    __table_name__ = "tb_h688"

    def __init__(self, *args, **kwargs):
        self.category_info = kwargs.get('category_info')
        # self.id = kwargs.get('id')
        self.info = kwargs.get('info')
        self.price = kwargs.get('price')
        self.sales = kwargs.get('sales')
        self.title = kwargs.get('title')
        self.goods_id = kwargs.get('goods_id')
        self.shop_id = kwargs.get('shop_id')
        self.photo_url = kwargs.get('photo')


class TbH688(feapder.Spider):

    def start_requests(self):
        uri = '/proxy/dyapp/shop_product_list/'
        url = f"{host}{uri}"

        parms = {
            "sec_shop_id": 'gZvNtXI',
            'cursor': "0",
            'sort_type': "0",
            'keep_key': "",
            'token': token
        }

        yield feapder.Request(url=url, params=parms, callback=self.parse_shop_list)

    def parse_shop_list(self, request, response):
        data = response.json

        if not data['data']['aweme_msg_list']:
            return

        for i in data['data']['aweme_msg_list']:
            title = i['name']
            goods_id = i['product_id']
            price = i['price']
            sales = i['sell_num']
            photo_url = i['img_url']

            goods_info_uri = '/proxy/dyapp/goods_detail/'
            params = {
                "id": i['product_id'],
                'token': token
            }

            goods_info_url = f"{host}{goods_info_uri}"

            yield feapder.Request(url=goods_info_url, params=params, callback=self.parse_goods_info,
                                  meta={
                                      'title': title,
                                      'goods_id': goods_id,
                                      'price': price,
                                      'sales': sales,
                                      'photo_url': photo_url
                                  })

        if data['data']['has_more']:
            params = {
                "sec_shop_id": 'gZvNtXI',
                'cursor': data['data']['cursor'],
                'sort_type': "0",
                'keep_key': data['data']['keep_key'],
                'token': token
            }

            yield feapder.Request(url=request.url, params=params, callback=self.parse_shop_list)

    def parse_goods_info(self, request, response):
        data = response.json

        if not data['data']:
            return

        shop_id = data['data'][0]['extra_info']['shop_id']
        category_info = data['data'][0]['extra_info']['category_info']
        title = request.meta['title']
        goods_id = request.meta['goods_id']
        price = request.meta['price']
        sales = request.meta['sales']
        photo_url = request.meta['photo_url']

        uri = '/proxy/dyapp/goods_detail_attach/'

        params = {
            "id": goods_id,
            'token': token
        }

        url = f"{host}{uri}"

        yield feapder.Request(url=url, params=params, callback=self.parse_goods_detail_attach,
                              meta={
                                  'title': title,
                                  'goods_id': goods_id,
                                  'price': price,
                                  'sales': sales,
                                  'photo_url': photo_url,
                                  'shop_id': shop_id,
                                  'category_info': category_info
                              })

    def parse_goods_detail_attach(self, request, response):
        data = response.json

        if not data['data']:
            return

        title = request.meta['title']
        goods_id = request.meta['goods_id']
        price = request.meta['price']
        sales = request.meta['sales']
        photo_url = request.meta['photo_url']
        shop_id = request.meta['shop_id']
        category_info = request.meta['category_info']

        result = {}

        for item in data['data']['product_format']:
            for sub_item in item['format']:
                if 'name' in sub_item and 'message' in sub_item and len(sub_item['message']) > 0 and 'desc' in sub_item['message'][0]:
                    name = sub_item['name']
                    desc = sub_item['message'][0]['desc']
                    result[name] = desc

        info = result
        
        item = TbH688Item()
        item.title = title
        item.goods_id = goods_id
        item.price = price
        item.sales = sales
        item.photo_url = photo_url
        item.shop_id = shop_id
        item.category_info = category_info
        item.info = info
        
        yield item
            
        


if __name__ == "__main__":
    TbH688(redis_key='tb_h688:info').start()
